cmake_minimum_required(VERSION 3.14)

# set the project name
project(minimal)

#configure_file(config.h.in config.h)

include(CheckLibraryExists)

# specify the C++ standard
set(CMAKE_CXX_STANDARD 17)
set(CMAKE_CXX_STANDARD_REQUIRED True)

find_library(CFITSIO cfitsio REQUIRED)
#find_package(CFITSIO)


#find_package(CFITSIO REQUIRED)
find_package(YAML-CPP REQUIRED)


# TMV or Eigen must be available, but TMV is preferred
find_package(TMV QUIET)
if(TMV_FOUND)
    add_compile_definitions(USE_TMV=TRUE)
else()
    find_package(Eigen3 QUIET)
    if(NOT Eigen3_FOUND)
        message(FATAL_ERROR "Either TMV or Eigen3 must be available")
    endif()
    add_compile_definitions(USE_EIGEN=TRUE)
endif()   

find_package(gbutil)

#find_library(ASTROMETRY
#             NAMES astrometry
#            PATHS ${PROJECT_SOURCE_DIR}/../gb_packages/astrometry/
#             PATH_SUFFIXES obj
#             REQUIRED)

#set(GB_PACKAGES ${PROJECT_SOURCE_DIR}/../gb_packages)
#message(STATUS "GB_PACKAGES: "  ${GB_PACKAGES})
#add_subdirectory(gbutil)
add_subdirectory(src)
add_subdirectory(src/subs)
add_subdirectory(pydir)


